#ansible-playbook -i invfile Playbooks/awscli_install.yml -vv --ask-vault-pass
---
  - name: Install AWS Cli On All Servers
    hosts: pvt
    gather_facts: yes
    become: yes
    become_user: root
    serial: 3
    vars:
     user_password: vault |
          $ANSIBLE_VAULT;1.1;AES256
      62333136613434633662363136393532313036643666643563656530356634383830363237393564
      6464313634613765336665313566333538636138363731610a666137383761663435396563336633
      62393231656531376433393962383561663433326261363435666134646362633636616263363463
      6465326462653038380a313062306261326633663536326463333131643735623030343063363435
      35646432656231396338313566316239623333316264303638623234623166613132356133623339
      36666562383233316535613239636639326632353561313262363863623735336537396664313763
      63636432303236333930326632636262626363323536656239316333396163626436366531343937
      30396636306337386134336163386430303666663432386666643065373530343833623937363366
      62663365356634623231373066323638333531343035333762393837643938346336393633613033
      61336161303864656539373665626136636463653531306332363437356132306434383861613134
      613165636465363139323633653965396234
    tasks:
       - name: Create .aws folder
         shell: mkdir -p /root/.aws
         ignore_errors: yes
       - name: Copy Encrypted File To /tmp
         copy:
           src: //home/ansibleadmin/aws_creds #This Encrypted File Must Be Created Prior To Running The Playbook.
           dest: /tmp/aws_creds
           owner: root
           group: root
           mode: '0600'
       - name: Copy Encrypted File To .aws folder
         copy:
           src: /home/ansibleadmin/aws_creds #This Encrypted File Must Be Created Prior To Running The Playbook.
           dest: /root/.aws/credentials
           owner: root
           group: root
           mode: '0600'
       - name: Replace Password Authentication To Yes
         ansible.builtin.lineinfile:
           path: /etc/ssh/sshd_config
           regexp: '^PasswordAuthentication no'
           line: PasswordAuthentication yes
           backup: yes
         notify:
         -  Restart SSH Service
       - name: Creating admin Anand
         user:
           name: anand
           state: present
           comment: Admin User Anand
           groups: root
           shell: /bin/bash
           group: root
           password: "{{ '%s' | format(user_password) | regex_replace('\n', '') | password_hash('123') }}"
           password_expire_min: 1
       - name: Check S3 Buckets
         shell: aws s3 ls
         register: buckets
    handlers:
      - name: Restart SSH Service
        shell: service sshd restart